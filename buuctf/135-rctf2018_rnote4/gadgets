


Gadgets
=======


0x0000000000400c2f: add bl, dh; ret; 
0x00000000004007b4: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x0000000000400c2d: add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004007b2: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x0000000000400c2b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x000000000040072c: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400603: add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000040083e: add byte ptr [rax], al; je 0x847; call 0x630; leave; ret; 
0x0000000000400979: add byte ptr [rax], al; je 0x982; call 0x630; leave; ret; 
0x0000000000400a27: add byte ptr [rax], al; je 0xa30; call 0x630; leave; ret; 
0x0000000000400ac7: add byte ptr [rax], al; je 0xad0; call 0x630; leave; ret; 
0x0000000000400b08: add byte ptr [rax], al; mov rdi, rax; call 0x690; nop; pop rbp; ret; 
0x000000000040072e: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400c32: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400718: add byte ptr [rax], al; test rax, rax; je 0x730; pop rbp; mov edi, 0x602078; jmp rax; 
0x0000000000400766: add byte ptr [rax], al; test rax, rax; je 0x778; pop rbp; mov edi, 0x602078; jmp rax; 
0x00000000004007b3: add byte ptr [rax], al; test rax, rax; je 0x7ab; push rbp; mov rbp, rsp; call rax; 
0x0000000000400794: add eax, 0x2018ee; add ebx, esi; ret; 
0x00000000004005f6: add eax, 0x2019fd; test rax, rax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x0000000000400aca: add eax, 0xfffb60e8; dec ecx; ret; 
0x0000000000400a2a: add eax, 0xfffc00e8; dec ecx; ret; 
0x000000000040097c: add eax, 0xfffcaee8; dec ecx; ret; 
0x0000000000400841: add eax, 0xfffde9e8; dec ecx; ret; 
0x0000000000400799: add ebx, esi; ret; 
0x0000000000400606: add esp, 8; ret; 
0x0000000000400605: add rsp, 8; ret; 
0x0000000000400722: and byte ptr [rax], ah; jmp rax; 
0x0000000000400797: and byte ptr [rax], al; add ebx, esi; ret; 
0x00000000004005f9: and byte ptr [rax], al; test rax, rax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x000000000040083b: and eax, 0x28; je 0x847; call 0x630; leave; ret; 
0x0000000000400976: and eax, 0x28; je 0x982; call 0x630; leave; ret; 
0x0000000000400a24: and eax, 0x28; je 0xa30; call 0x630; leave; ret; 
0x0000000000400ac4: and eax, 0x28; je 0xad0; call 0x630; leave; ret; 
0x0000000000400842: call 0x630; leave; ret; 
0x0000000000400b0d: call 0x690; nop; pop rbp; ret; 
0x0000000000400600: call 0x6c0; add rsp, 8; ret; 
0x00000000004007c5: call qword ptr [rbp + 0x48]; 
0x00000000004007be: call rax; 
0x0000000000400c9b: call rsp; 
0x00000000004008d3: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000400846: dec ecx; ret; 
0x0000000000400c0c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004007b9: int1; push rbp; mov rbp, rsp; call rax; 
0x00000000004005fe: je 0x605; call 0x6c0; add rsp, 8; ret; 
0x000000000040071d: je 0x730; pop rbp; mov edi, 0x602078; jmp rax; 
0x000000000040076b: je 0x778; pop rbp; mov edi, 0x602078; jmp rax; 
0x00000000004007b8: je 0x7ab; push rbp; mov rbp, rsp; call rax; 
0x0000000000400840: je 0x847; call 0x630; leave; ret; 
0x000000000040097b: je 0x982; call 0x630; leave; ret; 
0x0000000000400a29: je 0xa30; call 0x630; leave; ret; 
0x0000000000400ac9: je 0xad0; call 0x630; leave; ret; 
0x0000000000400d7b: jmp qword ptr [rax]; 
0x0000000000400ddb: jmp qword ptr [rbp]; 
0x0000000000400725: jmp rax; 
0x0000000000400791: lcall [rbp - 0x3a]; add eax, 0x2018ee; add ebx, esi; ret; 
0x0000000000400847: leave; ret; 
0x00000000004005f5: mov eax, dword ptr [rip + 0x2019fd]; test rax, rax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x00000000004007bc: mov ebp, esp; call rax; 
0x0000000000400601: mov ebx, 0x48000000; add esp, 8; ret; 
0x0000000000400720: mov edi, 0x602078; jmp rax; 
0x0000000000400b0b: mov edi, eax; call 0x690; nop; pop rbp; ret; 
0x00000000004005f4: mov rax, qword ptr [rip + 0x2019fd]; test rax, rax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x00000000004007bb: mov rbp, rsp; call rax; 
0x0000000000400b0a: mov rdi, rax; call 0x690; nop; pop rbp; ret; 
0x0000000000400728: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400775: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000400727: nop word ptr [rax + rax]; pop rbp; ret; 
0x0000000000400b12: nop; pop rbp; ret; 
0x0000000000400c1c: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400c1e: pop r13; pop r14; pop r15; ret; 
0x0000000000400c20: pop r14; pop r15; ret; 
0x0000000000400c22: pop r15; ret; 
0x000000000040071f: pop rbp; mov edi, 0x602078; jmp rax; 
0x0000000000400c1b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400c1f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400730: pop rbp; ret; 
0x0000000000400c23: pop rdi; ret; 
0x0000000000400c21: pop rsi; pop r15; ret; 
0x0000000000400c1d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000004007ba: push rbp; mov rbp, rsp; call rax; 
0x0000000000400682: ret 0x2019; 
0x00000000004008d6: ret 0x8b48; 
0x000000000040081f: ret 0xb60f; 
0x0000000000400609: ret; 
0x00000000004007b7: sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x000000000040083c: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x847; call 0x630; leave; ret; 
0x0000000000400977: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x982; call 0x630; leave; ret; 
0x0000000000400a25: sub byte ptr [rax], al; add byte ptr [rax], al; je 0xa30; call 0x630; leave; ret; 
0x0000000000400ac5: sub byte ptr [rax], al; add byte ptr [rax], al; je 0xad0; call 0x630; leave; ret; 
0x0000000000400c35: sub esp, 8; add rsp, 8; ret; 
0x0000000000400c34: sub rsp, 8; add rsp, 8; ret; 
0x000000000040072a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004005fc: test eax, eax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x000000000040071b: test eax, eax; je 0x730; pop rbp; mov edi, 0x602078; jmp rax; 
0x0000000000400769: test eax, eax; je 0x778; pop rbp; mov edi, 0x602078; jmp rax; 
0x00000000004007b6: test eax, eax; je 0x7ab; push rbp; mov rbp, rsp; call rax; 
0x00000000004005fb: test rax, rax; je 0x605; call 0x6c0; add rsp, 8; ret; 
0x000000000040071a: test rax, rax; je 0x730; pop rbp; mov edi, 0x602078; jmp rax; 
0x0000000000400768: test rax, rax; je 0x778; pop rbp; mov edi, 0x602078; jmp rax; 
0x00000000004007b5: test rax, rax; je 0x7ab; push rbp; mov rbp, rsp; call rax; 

100 gadgets found
