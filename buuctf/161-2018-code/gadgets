


Gadgets
=======


0x000000000040061e: adc byte ptr [rax], ah; jmp rax; 
0x00000000004005ef: add bl, dh; ret; 
0x00000000004007dc: add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000400615: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400657: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400552: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040098d: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400613: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400655: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbx + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040098b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x000000000040090f: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000040073e: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040084d: add byte ptr [rax], al; call 0x570; nop; leave; ret; 
0x0000000000400a5a: add byte ptr [rax], al; cmp bh, 0xff; jmp qword ptr [rax + 1]; 
0x000000000040073f: add byte ptr [rax], al; leave; ret; 
0x0000000000400626: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400992: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400614: add byte ptr [rax], al; test rax, rax; je 0x628; pop rbp; mov edi, 0x601050; jmp rax; 
0x0000000000400656: add byte ptr [rax], al; test rax, rax; je 0x668; pop rbp; mov edi, 0x601050; jmp rax; 
0x0000000000400625: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000400687: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400821: add cl, byte ptr [rax - 0x7d]; ret 0x4804; 
0x0000000000400740: add cl, cl; ret; 
0x00000000004007da: add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000040073d: add dword ptr [rax], eax; add byte ptr [rax], al; leave; ret; 
0x0000000000400733: add dword ptr [rbx + 0x453bfc45], ecx; clc; jl 0x6c7; mov eax, 1; leave; ret; 
0x000000000040054e: add eax, 0x200aa5; test rax, rax; je 0x55a; call rax; 
0x000000000040054e: add eax, 0x200aa5; test rax, rax; je 0x55a; call rax; add rsp, 8; ret; 
0x000000000040055b: add esp, 8; ret; 
0x000000000040055a: add rsp, 8; ret; 
0x0000000000400551: and byte ptr [rax], al; test rax, rax; je 0x55a; call rax; 
0x0000000000400551: and byte ptr [rax], al; test rax, rax; je 0x55a; call rax; add rsp, 8; ret; 
0x000000000040084f: call 0x570; nop; leave; ret; 
0x0000000000400843: call 0x5a0; lea rdi, [rip + 0x178]; call 0x570; nop; leave; ret; 
0x000000000040067d: call 0x600; mov byte ptr [rip + 0x2009ef], 1; pop rbp; ret; 
0x0000000000400b33: call qword ptr [rsi]; 
0x0000000000400558: call rax; 
0x0000000000400558: call rax; add rsp, 8; ret; 
0x0000000000400739: clc; jl 0x6c7; mov eax, 1; leave; ret; 
0x00000000004007fe: clc; leave; ret; 
0x00000000004007c4: clc; sub byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000400736: cld; cmp eax, dword ptr [rbp - 8]; jl 0x6c7; mov eax, 1; leave; ret; 
0x0000000000400a5c: cmp bh, 0xff; jmp qword ptr [rax + 1]; 
0x000000000040084a: cmp eax, 0x178; call 0x570; nop; leave; ret; 
0x00000000004007f2: cmp eax, dword ptr [rbp - 0x10]; jl 0x76e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000400737: cmp eax, dword ptr [rbp - 8]; jl 0x6c7; mov eax, 1; leave; ret; 
0x0000000000400847: dec dword ptr [rax - 0x73]; cmp eax, 0x178; call 0x570; nop; leave; ret; 
0x00000000004007fa: dec dword ptr [rax - 0x75]; clc; leave; ret; 
0x000000000040096c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004007f1: hlt; cmp eax, dword ptr [rbp - 0x10]; jl 0x76e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040054a: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200aa5; test rax, rax; je 0x55a; call rax; 
0x0000000000400556: je 0x55a; call rax; 
0x0000000000400556: je 0x55a; call rax; add rsp, 8; ret; 
0x0000000000400619: je 0x628; pop rbp; mov edi, 0x601050; jmp rax; 
0x000000000040065b: je 0x668; pop rbp; mov edi, 0x601050; jmp rax; 
0x000000000040073a: jl 0x6c7; mov eax, 1; leave; ret; 
0x00000000004007f5: jl 0x76e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000400a5f: jmp qword ptr [rax + 1]; 
0x0000000000400acb: jmp qword ptr [rax]; 
0x0000000000400b73: jmp qword ptr [rbp]; 
0x0000000000400621: jmp rax; 
0x000000000040084b: js 0x84e; add byte ptr [rax], al; call 0x570; nop; leave; ret; 
0x0000000000400a57: lcall [rax + 1]; add byte ptr [rax], al; cmp bh, 0xff; jmp qword ptr [rax + 1]; 
0x0000000000400849: lea edi, [rip + 0x178]; call 0x570; nop; leave; ret; 
0x0000000000400848: lea rdi, [rip + 0x178]; call 0x570; nop; leave; ret; 
0x0000000000400741: leave; ret; 
0x0000000000400682: mov byte ptr [rip + 0x2009ef], 1; pop rbp; ret; 
0x000000000040090e: mov eax, 0; leave; ret; 
0x000000000040073c: mov eax, 1; leave; ret; 
0x00000000004007ef: mov eax, dword ptr [rbp - 0xc]; cmp eax, dword ptr [rbp - 0x10]; jl 0x76e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000400734: mov eax, dword ptr [rbp - 4]; cmp eax, dword ptr [rbp - 8]; jl 0x6c7; mov eax, 1; leave; ret; 
0x00000000004007fc: mov eax, dword ptr [rbp - 8]; leave; ret; 
0x000000000040054d: mov eax, dword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; 
0x000000000040054d: mov eax, dword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; add rsp, 8; ret; 
0x000000000040067b: mov ebp, esp; call 0x600; mov byte ptr [rip + 0x2009ef], 1; pop rbp; ret; 
0x000000000040061c: mov edi, 0x601050; jmp rax; 
0x000000000040073b: mov edi, dword ptr [rax + 1]; leave; ret; 
0x00000000004007fb: mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040054c: mov rax, qword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; 
0x000000000040054c: mov rax, qword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; add rsp, 8; ret; 
0x000000000040067a: mov rbp, rsp; call 0x600; mov byte ptr [rip + 0x2009ef], 1; pop rbp; ret; 
0x000000000040054f: movsd dword ptr [rdi], dword ptr [rsi]; or ah, byte ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400623: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400665: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000400854: nop; leave; ret; 
0x0000000000400550: or ah, byte ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040054b: or byte ptr [rax - 0x75], cl; add eax, 0x200aa5; test rax, rax; je 0x55a; call rax; 
0x00000000004007c1: or cl, byte ptr [rax - 0x3f]; clc; sub byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000400685: or dword ptr [rax], esp; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040065c: or ebx, dword ptr [rbp - 0x41]; push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400684: out dx, eax; or dword ptr [rax], esp; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040097c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040097e: pop r13; pop r14; pop r15; ret; 
0x0000000000400980: pop r14; pop r15; ret; 
0x0000000000400982: pop r15; ret; 
0x000000000040061b: pop rbp; mov edi, 0x601050; jmp rax; 
0x000000000040097b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040097f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400628: pop rbp; ret; 
0x0000000000400983: pop rdi; ret; 
0x0000000000400981: pop rsi; pop r15; ret; 
0x000000000040097d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000040061d: push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400679: push rbp; mov rbp, rsp; call 0x600; mov byte ptr [rip + 0x2009ef], 1; pop rbp; ret; 
0x00000000004007e0: ret 0x2948; 
0x0000000000400824: ret 0x4804; 
0x00000000004007c8: ret 0x8948; 
0x00000000004007d2: ret 0xb848; 
0x000000000040055e: ret; 
0x0000000000400618: sal byte ptr [rbp + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x000000000040065a: sal byte ptr [rbx + rcx + 0x5d], 0xbf; push rax; adc byte ptr [rax], ah; jmp rax; 
0x0000000000400555: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004007df: scasd eax, dword ptr [rdi]; ret 0x2948; 
0x00000000004007c5: sub byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000400995: sub esp, 8; add rsp, 8; ret; 
0x0000000000400549: sub esp, 8; mov rax, qword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; 
0x0000000000400994: sub rsp, 8; add rsp, 8; ret; 
0x0000000000400548: sub rsp, 8; mov rax, qword ptr [rip + 0x200aa5]; test rax, rax; je 0x55a; call rax; 
0x0000000000400554: test eax, eax; je 0x55a; call rax; 
0x0000000000400554: test eax, eax; je 0x55a; call rax; add rsp, 8; ret; 
0x0000000000400617: test eax, eax; je 0x628; pop rbp; mov edi, 0x601050; jmp rax; 
0x0000000000400659: test eax, eax; je 0x668; pop rbp; mov edi, 0x601050; jmp rax; 
0x0000000000400553: test rax, rax; je 0x55a; call rax; 
0x0000000000400553: test rax, rax; je 0x55a; call rax; add rsp, 8; ret; 
0x0000000000400616: test rax, rax; je 0x628; pop rbp; mov edi, 0x601050; jmp rax; 
0x0000000000400658: test rax, rax; je 0x668; pop rbp; mov edi, 0x601050; jmp rax; 

126 gadgets found
